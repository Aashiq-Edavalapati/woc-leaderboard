// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Participant {
  fullName     String
  rollNumber   String     @unique
  mobileNumber String     @unique
  githubURL    String     @unique
  bounty       Int        @default(0)
  Solution     Solution[]
}

model Maintainer {
  fullName               String
  githubURL              String                   @unique
  MaintainersForProjects MaintainersForProjects[]
}

model MaintainersForProjects {
  githubURL String
  repoId    String

  maintainer Maintainer @relation(fields: [githubURL], references: [githubURL])
  project    Project    @relation(fields: [repoId], references: [repoId])

  @@id([githubURL, repoId])
}

model Project {
  repoId                 String                   @id
  title                  String
  MaintainersForProjects MaintainersForProjects[]
  solution               Solution[]
}

// model Issue {
//  issueId   String @id
//  repoId    String
//  claimedBy String
//
//  project Project @relation(fields: [repoId], references: [repoId])
//}

model Solution {
  id                String         @id
  repoId            String
  participantGitHub String
  status            SolutionStatus @default(Open)

  participant Participant @relation(fields: [participantGitHub], references: [githubURL])
  project     Project     @relation(fields: [repoId], references: [repoId])
}

enum SolutionStatus {
  Open
  Closed
  Merged
}

model BountyLog {
  id        Int       @id @default(autoincrement())
  givenBy   String
  amount    Int
  givenTo   String
  createdAt DateTime? @default(now())
}
